[{"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"2","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"3","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"9","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"12","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"13","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"14","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"17","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"18","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"19","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"20","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js":"21","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js":"22","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js":"23","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js":"24","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js":"25"},{"size":695,"mtime":1606710602000,"results":"26","hashOfConfig":"27"},{"size":619,"mtime":1572746944000,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1606188587000,"results":"29","hashOfConfig":"27"},{"size":2113,"mtime":1610944988263,"results":"30","hashOfConfig":"27"},{"size":1242,"mtime":1572413815000,"results":"31","hashOfConfig":"27"},{"size":7516,"mtime":1610944928599,"results":"32","hashOfConfig":"27"},{"size":4252,"mtime":1596158298000,"results":"33","hashOfConfig":"27"},{"size":5229,"mtime":1610945584563,"results":"34","hashOfConfig":"27"},{"size":1936,"mtime":1610945569943,"results":"35","hashOfConfig":"27"},{"size":1973,"mtime":1574643745000,"results":"36","hashOfConfig":"27"},{"size":11123,"mtime":1596158295000,"results":"37","hashOfConfig":"27"},{"size":303,"mtime":1572325600000,"results":"38","hashOfConfig":"27"},{"size":4243,"mtime":1572235200000,"results":"39","hashOfConfig":"27"},{"size":1054,"mtime":1572325610000,"results":"40","hashOfConfig":"27"},{"size":4752,"mtime":1610944784881,"results":"41","hashOfConfig":"27"},{"size":816,"mtime":1574076347000,"results":"42","hashOfConfig":"27"},{"size":644,"mtime":1596158958000,"results":"43","hashOfConfig":"27"},{"size":754,"mtime":1610948314203,"results":"44","hashOfConfig":"27"},{"size":587,"mtime":1596150160000,"results":"45","hashOfConfig":"27"},{"size":701,"mtime":1596158847000,"results":"46","hashOfConfig":"27"},{"size":602,"mtime":1610948474303,"results":"47","hashOfConfig":"27"},{"size":6656,"mtime":1596158542000,"results":"48","hashOfConfig":"27"},{"size":243,"mtime":1610948116612,"results":"49","hashOfConfig":"27"},{"size":174,"mtime":1595792262000,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1575860836000,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9n59ly",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],["108","109"],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["110","111","112"],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["113","114","115","116","117","118","119","120","121","122","123"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem,\n    Button, FormGroup, Label, Input, Col, FormFeedback, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors, Form } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n\n   \n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    \n\n    \n\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n    }\n\n    \n    \n    \n    render() {\n          \n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n            <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>Contact Us</h2>\n                </div>\n            </div>\n\n            <div className=\"row row-content align-items-center\">\n                <div className=\"col-sm-4\">\n                    <h5>Our Address</h5>\n                    <address>\n                        1 Nucamp Way<br />\n                        Seattle, WA 98001<br />\n                        U.S.A.\n                    </address>\n                </div>\n                <div className=\"col\">\n                    <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                    <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                    <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                            </Form>\n                    </div>\n                </div>\n            </div>\n    );\n}\n}\n\nexport default Contact;","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",["124"],"import { CAMPSITES } from '../shared/campsites';\nimport * as ActionTypes from './ActionTypes';\n\n\nexport const Campsites = (state = {\n    isLoading: true,\n    errMess: null,\n    campsites: []\n}, action) => {\nswitch (action.type) {\n    case ActionTypes.ADD_CAMPSITES:\n        return {...state, isLoading: false, errMess: null, campsites: action.payload};\n    case ActionTypes.CAMPSITES_LOADING:\n        return {...state, isLoading: true, errMess: null, campsites: []};\n    case ActionTypes.CAMPSITES_FAILED:\n        return {...state, isLoading: false, errMess: action.payload};\n    default:\n        return state;\n}\n};","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",["125"],"import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments: []}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            const comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",["126"],"import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions: [] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOTIONS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOTIONS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []};\r\n\r\n        case ActionTypes.PROMOTIONS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js",[],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js",["127"],"import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const fetchCampsites = () => dispatch => {\r\n    dispatch(campsitesLoading());\r\n\r\n    return fetch(baseUrl + 'campsites')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                const errMess = new Error(error.message);\r\n                throw errMess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(campsites => dispatch(addCampsites(campsites)))\r\n        .catch(error => dispatch(campsitesFailed(error.message)));\r\n};\r\n\r\nexport const campsitesLoading = () => ({\r\n    type: ActionTypes.CAMPSITES_LOADING\r\n});\r\n\r\nexport const campsitesFailed = errMess => ({\r\n    type: ActionTypes.CAMPSITES_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addCampsites = campsites => ({\r\n    type: ActionTypes.ADD_CAMPSITES,\r\n    payload: campsites\r\n});\r\n\r\nexport const fetchComments = () => dispatch => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                const errMess = new Error(error.message);\r\n                throw errMess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = errMess => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addComments = comments => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const addComment = comment => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (campsiteId, rating, author, text) => dispatch => {\r\n    \r\n    const newComment = {\r\n        campsiteId: campsiteId,\r\n        rating: rating,\r\n        author: author,\r\n        text: text\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }})\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => { throw error; }\r\n        )\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('post comment', error.message);\r\n            alert('Your comment could not be posted\\nError: ' + error.message);\r\n        });\r\n};\r\n\r\nexport const fetchPromotions = () => dispatch => {\r\n    dispatch(promotionsLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                const errMess = new Error(error.message);\r\n                throw errMess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(promotions => dispatch(addPromotions(promotions)))\r\n        .catch(error => dispatch(promotionsFailed(error.message)));\r\n};\r\n\r\nexport const promotionsLoading = () => ({\r\n    type: ActionTypes.PROMOTIONS_LOADING\r\n});\r\n\r\nexport const promotionsFailed = errMess => ({\r\n    type: ActionTypes.PROMOTIONS_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addPromotions = promotions => ({\r\n    type: ActionTypes.ADD_PROMOTIONS,\r\n    payload: promotions\r\n});\r\n\r\nexport const fetchPartners = () => dispatch => {\r\n    dispatch(partnersLoading());\r\n\r\n    return fetch(baseUrl + 'partners')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                const errMess = new Error(error.message);\r\n                throw errMess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(partners => dispatch(addPartners(partners)))\r\n        .catch(error => dispatch(partnersFailed(error.message)));\r\n};\r\n\r\nexport const partnersLoading = () => ({\r\n    type: ActionTypes.PARTNERS_LOADING\r\n});\r\n\r\nexport const partnersFailed = errMess => ({\r\n    type: ActionTypes.PARTNERS_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addPartners = partners => ({\r\n    type: ActionTypes.ADD_PARTNERS,\r\n    payload: partners\r\n});\r\n\r\nexport const postFeedback = feedback => () => {\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(feedback),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n    })\r\n    .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => { throw error; })\r\n        .then(response => response.json())\r\n        .then(response => { \r\n            console.log('Feedback: ', response); \r\n            alert('Thank you for your feedback!\\n' + JSON.stringify(response));\r\n        })\r\n        .catch(error => { \r\n            console.log('Feedback: ', error.message);\r\n            alert('Your feedback could not be posted\\nError: ' + error.message);\r\n        });\r\n};\r\n","/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js",[],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js",[],"/home/jcann001/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":95,"column":33,"nodeType":"134","endLine":96,"endColumn":62},{"ruleId":"132","severity":1,"message":"135","line":106,"column":33,"nodeType":"134","endLine":113,"endColumn":35},{"ruleId":"132","severity":1,"message":"136","line":127,"column":33,"nodeType":"134","endLine":130,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":3,"column":13,"nodeType":"139","messageId":"140","endLine":3,"endColumn":22},{"ruleId":"137","severity":1,"message":"141","line":3,"column":31,"nodeType":"139","messageId":"140","endLine":3,"endColumn":36},{"ruleId":"137","severity":1,"message":"142","line":3,"column":43,"nodeType":"139","messageId":"140","endLine":3,"endColumn":55},{"ruleId":"137","severity":1,"message":"143","line":5,"column":19,"nodeType":"139","messageId":"140","endLine":5,"endColumn":28},{"ruleId":"132","severity":1,"message":"135","line":90,"column":37,"nodeType":"134","endLine":98,"endColumn":39},{"ruleId":"132","severity":1,"message":"135","line":115,"column":37,"nodeType":"134","endLine":123,"endColumn":39},{"ruleId":"132","severity":1,"message":"135","line":140,"column":37,"nodeType":"134","endLine":149,"endColumn":39},{"ruleId":"132","severity":1,"message":"135","line":167,"column":37,"nodeType":"134","endLine":174,"endColumn":39},{"ruleId":"132","severity":1,"message":"144","line":191,"column":45,"nodeType":"134","endLine":195,"endColumn":47},{"ruleId":"132","severity":1,"message":"133","line":201,"column":37,"nodeType":"134","endLine":202,"endColumn":66},{"ruleId":"132","severity":1,"message":"136","line":211,"column":37,"nodeType":"134","endLine":214,"endColumn":39},{"ruleId":"137","severity":1,"message":"145","line":1,"column":10,"nodeType":"139","messageId":"140","endLine":1,"endColumn":19},{"ruleId":"137","severity":1,"message":"146","line":1,"column":10,"nodeType":"139","messageId":"140","endLine":1,"endColumn":18},{"ruleId":"137","severity":1,"message":"147","line":1,"column":10,"nodeType":"139","messageId":"140","endLine":1,"endColumn":20},{"ruleId":"137","severity":1,"message":"145","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":19},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'FormGroup' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'FormFeedback' is defined but never used.","'LocalForm' is defined but never used.","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","'CAMPSITES' is defined but never used.","'COMMENTS' is defined but never used.","'PROMOTIONS' is defined but never used.","no-global-assign","no-unsafe-negation"]